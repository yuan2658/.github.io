<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WhiteWater</title>
  
  <subtitle>Thirst most</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yuanww.cn/"/>
  <updated>2020-01-11T02:02:13.941Z</updated>
  <id>http://yuanww.cn/</id>
  
  <author>
    <name>Yuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux下安装和配置maven</title>
    <link href="http://yuanww.cn/2020/01/09/linux%E4%B8%8B%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AEmaven/"/>
    <id>http://yuanww.cn/2020/01/09/linux下安装和配置maven/</id>
    <published>2020-01-09T13:23:49.000Z</published>
    <updated>2020-01-11T02:02:13.941Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux下安装和配置maven"><a href="#linux下安装和配置maven" class="headerlink" title="linux下安装和配置maven"></a><strong>linux下安装和配置maven</strong></h1><h3 id="1-Linux下的Maven下载安装"><a href="#1-Linux下的Maven下载安装" class="headerlink" title="1.Linux下的Maven下载安装"></a>1.Linux下的Maven下载安装</h3><p>安装包下载    <a href="http://maven.apache.org/" target="_blank" rel="noopener">Maven官网</a></p><p><img src="/2020/01/09/linux下安装和配置maven/1578571857233.png" alt="1578571857233"></p><p>上传到服务器</p><p><img src="/2020/01/09/linux下安装和配置maven/1578572009404.png" alt="1578572009404"></p><p>解压文件   解压命令 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf apache-maven-<span class="number">3.6</span>.3-bin.tar.gz</span><br></pre></td></tr></table></figure><p><img src="/2020/01/09/linux下安装和配置maven/1578572096469.png" alt="1578572096469"></p><h3 id="2-配置maven参数"><a href="#2-配置maven参数" class="headerlink" title="2.配置maven参数"></a>2.配置maven参数</h3><p>修改环境变量     </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# vim /etc/profile</span><br></pre></td></tr></table></figure><p>在 <code>/etc/profile</code>  中添加以下几行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/opt/apache-maven-<span class="number">3.6</span>.3</span><br><span class="line">export PATH=$&#123;PATH&#125;:$&#123;MAVEN_HOME&#125;/bin</span><br></pre></td></tr></table></figure><p><img src="/2020/01/09/linux下安装和配置maven/1578573751376.png" alt="1578573751376"></p><p>执行 <code>source /etc/profile</code> 使环境变量生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# source /etc/profile</span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# mvn -version</span><br></pre></td></tr></table></figure><p><img src="/2020/01/09/linux下安装和配置maven/1578573669374.png" alt="1578573669374"></p><p><strong>出现上图说明安装成功！</strong></p><h3 id="3-配置maven仓库地址"><a href="#3-配置maven仓库地址" class="headerlink" title="3.配置maven仓库地址"></a>3.配置maven仓库地址</h3><p>配置阿里云镜像仓库</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost conf]# vim setting.xml</span><br></pre></td></tr></table></figure><p>定位到mirrors节点添加下面配置</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--阿里云镜像仓库 --&gt;</span><br><span class="line"> &lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http:<span class="comment">//maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span></span><br><span class="line"> &lt;/mirror&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/01/09/linux下安装和配置maven/1578574267171.png" alt="1578574267171"></p><p>配置本地仓库</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;localRepository&gt;/home/maven/repo&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/01/09/linux下安装和配置maven/1578574798992.png" alt="1578574798992"></p><p><strong>maven配置完成！！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;linux下安装和配置maven&quot;&gt;&lt;a href=&quot;#linux下安装和配置maven&quot; class=&quot;headerlink&quot; title=&quot;linux下安装和配置maven&quot;&gt;&lt;/a&gt;&lt;strong&gt;linux下安装和配置maven&lt;/strong&gt;&lt;/h1&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://yuanww.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yuanww.cn/tags/linux/"/>
    
      <category term="maven" scheme="http://yuanww.cn/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>linux下安装和配置tomcat</title>
    <link href="http://yuanww.cn/2020/01/07/linux%E4%B8%8B%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AEtomcat/"/>
    <id>http://yuanww.cn/2020/01/07/linux下安装和配置tomcat/</id>
    <published>2020-01-07T13:23:50.000Z</published>
    <updated>2020-01-07T14:43:41.260Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux配置tomcat"><a href="#linux配置tomcat" class="headerlink" title="linux配置tomcat"></a><strong>linux配置tomcat</strong></h1><h3 id="一-tomcat简介"><a href="#一-tomcat简介" class="headerlink" title="一.tomcat简介"></a>一.tomcat简介</h3><p>​    <code>Tomcat</code>是<code>Apache</code> 软件基金会（<code>Apache Software Foundation</code>）的<code>Jakarta</code> 项目中的一个核心项目。因为<code>Tomcat</code> 技术先进、性能稳定，而且免费，因而深受<code>Java</code>爱好者的喜爱，并得到了部分软件开发商的认可，成为目前比较流行的<code>Web</code> 应用服务器。</p><p>​    <code>Tomcat</code>服务器是一个免费的开放源代码的<code>Web</code> 应用服务器，属于轻量级应用服务器。</p><p>​    当配置正确时，<code>Apache</code> 为<code>HTML</code>页面服务，而<code>Tomcat</code> 实际上运行<code>JSP</code> 页面和<code>Servlet</code>。另外，<code>Tomcat</code>还是一个<code>Servlet</code>和<code>JSP</code>容器，独立的<code>Servlet</code>容器是<code>Tomcat</code>的默认模式。不过，<code>Tomcat</code>处理静态<code>HTML</code>的能力不如<code>Apache</code>服务器。目前<code>Tomcat</code>最新版本为<strong>9.0.30</strong>。</p><p>官网：<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a></p><h3 id="二-tomcat下载和安装"><a href="#二-tomcat下载和安装" class="headerlink" title="二.tomcat下载和安装"></a>二.tomcat下载和安装</h3><h6 id="1-前置条件"><a href="#1-前置条件" class="headerlink" title="1.前置条件"></a>1.前置条件</h6><p>​    安装tomcat之前要先安装jdk，见<a href="https://blog.yuanww.cn/2019/12/27/linux%E4%B8%8B%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AEjdk/" target="_blank" rel="noopener">linux下安装和配置jdk</a>。</p><h6 id="2-下载"><a href="#2-下载" class="headerlink" title="2.下载"></a>2.下载</h6><p>​    先从tomcat网站上下载最新的gz安装包</p><p><a href="https://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">tomcat官网下载页面</a></p><p>​    找到linux对应的tomcat安装包</p><p><img src="/2020/01/07/linux下安装和配置tomcat/1578405162547.png" alt="1578405162547"></p><h6 id="3-上传"><a href="#3-上传" class="headerlink" title="3.上传"></a>3.上传</h6><p>​    使用<code>ftp</code>工具（我这里使用的是<code>FileZilla</code>）将下载好的文件上传到服务器 <code>/opt</code> 目录下</p><p><img src="/2020/01/07/linux下安装和配置tomcat/1578405812010.png" alt="1578405812010"></p><h6 id="4-解压"><a href="#4-解压" class="headerlink" title="4.解压"></a>4.解压</h6><p>​    进入opt目录，解压文件 </p><p>​    解压命令 <code>tar -xzvf  apache-tomcat-9.0.30.tar.gz</code> </p><p><img src="/2020/01/07/linux下安装和配置tomcat/1578405860157.png" alt="1578405860157"></p><h3 id="三-tomcat配置"><a href="#三-tomcat配置" class="headerlink" title="三.tomcat配置"></a>三.tomcat配置</h3><h6 id="1-环境变量配置"><a href="#1-环境变量配置" class="headerlink" title="1.环境变量配置"></a>1.环境变量配置</h6><p>编辑环境变量配置文件：<code>vim /etc/profile</code><br> 在文件末尾位置添加如下内容(<code>CATALINA_HOME</code>为安装tomcat的路径)<br> <code>export CATALINA_HOME=/opt/apache-tomcat-9.0.30</code><br> 通过vim的 <code>&quot;:wq&quot;</code> 命令进行保存退出<br> 使配置生效：<code>source /etc/profile</code></p><p><img src="/2020/01/07/linux下安装和配置tomcat/1578406873862.png" alt="1578406873862"></p><h6 id="2-字符集配置"><a href="#2-字符集配置" class="headerlink" title="2.字符集配置"></a>2.字符集配置</h6><p>进入tomcat安装目录的conf目录，编辑<code>server.xml</code>文件<br> <code>cd /opt/apache-tomcat-9.0.30/conf</code><br> <code>vim server.xml</code><br> 找到配置8080端口的位置，在节点末尾添加<code>URIEncoding=&quot;UTF-8&quot;</code><br><code>&quot;:wq&quot;</code> 命令进行保存退出</p><p><img src="/2020/01/07/linux下安装和配置tomcat/1578407111469.png" alt="1578407111469"></p><h6 id="3-tomcat验证"><a href="#3-tomcat验证" class="headerlink" title="3.tomcat验证"></a>3.tomcat验证</h6><p>进入tomcat安装目录的bin目录，执行<code>./startup.sh</code>，看到如图提示代表启动成功。</p><p><img src="/2020/01/07/linux下安装和配置tomcat/1578407254490.png" alt="1578407254490"></p><p>可以通过主机的ip地址+8080端口访问tomcat主页，比如：<a href="http://192.168.130.128:8080/" target="_blank" rel="noopener">http://192.168.130.128:8080/</a><br>需要注意检查防火墙是否关闭，如果未关闭需要配置iptables规则开放8080端口。<br>关闭iptables防火墙：<code>chkconfig iptables off</code><br>关闭firewall防火墙 ：<code>service firewalld stop</code></p><h6 id="4-本地验证"><a href="#4-本地验证" class="headerlink" title="4.本地验证"></a>4.本地验证</h6><p>成功启动后浏览器输入<a href="http://192.168.130.128:8080/查看信息（ip为服务器ip）" target="_blank" rel="noopener">http://192.168.130.128:8080/查看信息（ip为服务器ip）</a></p><p><img src="/2020/01/07/linux下安装和配置tomcat/1578407446822.png" alt="1578407446822"></p><p>出现上图所示，说明大功告成！</p><p>至此，tomcat安装完成，后续可添加项目重启tomcat服务。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;linux配置tomcat&quot;&gt;&lt;a href=&quot;#linux配置tomcat&quot; class=&quot;headerlink&quot; title=&quot;linux配置tomcat&quot;&gt;&lt;/a&gt;&lt;strong&gt;linux配置tomcat&lt;/strong&gt;&lt;/h1&gt;&lt;h3 id=&quot;一-to
      
    
    </summary>
    
      <category term="linux" scheme="http://yuanww.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yuanww.cn/tags/linux/"/>
    
      <category term="java" scheme="http://yuanww.cn/tags/java/"/>
    
      <category term="tomcat" scheme="http://yuanww.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>dubbo系列(一 dubbo简介)</title>
    <link href="http://yuanww.cn/2020/01/07/dubbo%E7%B3%BB%E5%88%97-%E4%B8%80/"/>
    <id>http://yuanww.cn/2020/01/07/dubbo系列-一/</id>
    <published>2020-01-07T08:28:16.000Z</published>
    <updated>2020-01-11T00:08:07.792Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-dubbo是什么"><a href="#一-dubbo是什么" class="headerlink" title="一 dubbo是什么"></a>一 dubbo是什么</h2><p>在介绍dubbo之前先了解一些概念，soa和rpc</p><h3 id="1-soa的简单介绍"><a href="#1-soa的简单介绍" class="headerlink" title="1.soa的简单介绍"></a>1.soa的简单介绍</h3><p><strong>Service-Oriented Architecture（SOA）面向服务架构</strong></p><p>​        面向服务的架构（SOA）是一个组件模型，它将应用程序的不同功能单元（称为服务）进行拆分，并通过这些服务之间定义良好的接口和协议联系起来。接口是采用中立的方式进行定义的，它应该独立于实现服务的硬件平台、操作系统和编程语言。这使得构件在各种各样的系统中的服务可以以一种统一和通用的方式进行交互。</p><p>​        SOA是一种粗粒度、松耦合服务架构，服务之间通过简单、精确定义接口进行通讯，它可以根据需求通过网络对松散耦合的粗粒度应用组件进行分布式部署、组合和使用。服务层是SOA的基础，可以直接被应用调用，从而有效控制系统中与软件代理交互的人为依赖性。</p><h3 id="2-rpc的简单介绍"><a href="#2-rpc的简单介绍" class="headerlink" title="2.rpc的简单介绍"></a>2.rpc的简单介绍</h3><p><strong>Romote Procedure Call（RPC）远程过程调用</strong></p><p>​        rpc就是一种进程间的通信方式。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即无论是调用本地接口/服务的还是远程的接口/服务，本质上编写的调用代码基本相同。</p><p>​        比如两台服务器A，B，一个应用部署在A服务器上，想要调用B服务器上应用提供的函数或者方法，由于不在一个内存空间，不能直接调用，这时候需要通过就可以应用RPC框架的实现来解决。</p><p><img src="/2020/01/07/dubbo系列-一/rpc.jpg" alt="RPC架构图"></p><p>​                                                                                        RPC架构图</p><h3 id="3-dubbo的简单介绍"><a href="#3-dubbo的简单介绍" class="headerlink" title="3.dubbo的简单介绍"></a>3.dubbo的简单介绍</h3><p><strong>Dubbo是阿里巴巴开源的基于 Java 的高性能 RPC分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。</strong></p><ul><li><p>一款分布式服务框架</p></li><li><p>高性能和透明化的RPC远程服务调用方案</p></li><li><p>SOA服务治理方案</p></li></ul><h2 id="二-为什么要用dubbo"><a href="#二-为什么要用dubbo" class="headerlink" title="二 为什么要用dubbo"></a>二 为什么要用dubbo</h2><h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h3><p>随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，亟需一个治理系统确保架构有条不紊的演进。</p><p><img src="/2020/01/07/dubbo系列-一/dubbo-architecture-roadmap.jpg" alt="架构演变"></p><p>​                                                                            互联网应用架构发展图</p><h4 id="单一应用架构"><a href="#单一应用架构" class="headerlink" title="单一应用架构"></a>单一应用架构</h4><p>当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。</p><h4 id="垂直应用架构"><a href="#垂直应用架构" class="headerlink" title="垂直应用架构"></a>垂直应用架构</h4><p>当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，提升效率的方法之一是将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的Web框架(MVC)是关键。</p><h4 id="分布式服务架构"><a href="#分布式服务架构" class="headerlink" title="分布式服务架构"></a>分布式服务架构</h4><p>当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的分布式服务框架(RPC)是关键。</p><h4 id="流动计算架构"><a href="#流动计算架构" class="headerlink" title="流动计算架构"></a>流动计算架构</h4><p>当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于提高机器利用率的资源调度和治理中心(SOA)是关键。</p><h3 id="2-需求"><a href="#2-需求" class="headerlink" title="2.需求"></a>2.需求</h3><p><img src="/2020/01/07/dubbo系列-一/dubbo-service-governance.jpg" alt="服务治理"></p><p>在大规模服务化之前，应用可能只是通过 RMI 或 Hessian 等工具，简单的暴露和引用远程服务，通过配置服务的URL地址进行调用，通过 F5 等硬件进行负载均衡。</p><p><strong>当服务越来越多时，服务 URL 配置管理变得非常困难，F5 硬件负载均衡器的单点压力也越来越大。</strong> 此时需要一个服务注册中心，动态地注册和发现服务，使服务的位置透明。并通过在消费方获取服务提供方地址列表，实现软负载均衡和 Failover，降低对 F5 硬件负载均衡器的依赖，也能减少部分成本。</p><p><strong>当进一步发展，服务间依赖关系变得错踪复杂，甚至分不清哪个应用要在哪个应用之前启动，架构师都不能完整的描述应用的架构关系。</strong> 这时，需要自动画出应用间的依赖关系图，以帮助架构师理清关系。</p><p><strong>接着，服务的调用量越来越大，服务的容量问题就暴露出来，这个服务需要多少机器支撑？什么时候该加机器？</strong> 为了解决这些问题，第一步，要将服务现在每天的调用量，响应时间，都统计出来，作为容量规划的参考指标。其次，要可以动态调整权重，在线上，将某台机器的权重一直加大，并在加大的过程中记录响应时间的变化，直到响应时间到达阈值，记录此时的访问量，再以此访问量乘以机器数反推总容量。</p><p>以上是 Dubbo 最基本的几个需求。</p><h2 id="三-dubbo技术架构"><a href="#三-dubbo技术架构" class="headerlink" title="三 dubbo技术架构"></a>三 dubbo技术架构</h2><h3 id="1-总体架构"><a href="#1-总体架构" class="headerlink" title="1.总体架构"></a>1.总体架构</h3><p>首先，上一张图（摘自官网）。</p><p><img src="/2020/01/07/dubbo系列-一/dubbo-architecture.jpg" alt="架构图">  </p><h3 id="2-节点角色说明"><a href="#2-节点角色说明" class="headerlink" title="2.节点角色说明"></a>2.节点角色说明</h3><table><thead><tr><th>节点</th><th style="text-align:left">角色说明</th></tr></thead><tbody><tr><td>Provider</td><td style="text-align:left">暴露服务的服务提供方</td></tr><tr><td>Consumer</td><td style="text-align:left">调用远程服务的服务消费方</td></tr><tr><td>Registry</td><td style="text-align:left">服务注册与发现的注册中心</td></tr><tr><td>Monitor</td><td style="text-align:left">统计服务的调用次数和调用时间的监控中心</td></tr><tr><td>Container</td><td style="text-align:left">服务运行容器</td></tr></tbody></table><h3 id="3-调用关系说明"><a href="#3-调用关系说明" class="headerlink" title="3.调用关系说明"></a>3.调用关系说明</h3><h5 id="0-服务容器负责启动，加载，运行服务提供者。"><a href="#0-服务容器负责启动，加载，运行服务提供者。" class="headerlink" title="0. 服务容器负责启动，加载，运行服务提供者。"></a>0. 服务容器负责启动，加载，运行服务提供者。</h5><h5 id="1-服务提供者在启动时，向注册中心注册自己提供的服务。"><a href="#1-服务提供者在启动时，向注册中心注册自己提供的服务。" class="headerlink" title="1. 服务提供者在启动时，向注册中心注册自己提供的服务。"></a>1. 服务提供者在启动时，向注册中心注册自己提供的服务。</h5><h5 id="2-服务消费者在启动时，向注册中心订阅自己所需的服务。"><a href="#2-服务消费者在启动时，向注册中心订阅自己所需的服务。" class="headerlink" title="2. 服务消费者在启动时，向注册中心订阅自己所需的服务。"></a>2. 服务消费者在启动时，向注册中心订阅自己所需的服务。</h5><h5 id="3-注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。"><a href="#3-注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。" class="headerlink" title="3. 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。"></a>3. 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</h5><h5 id="4-服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。"><a href="#4-服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。" class="headerlink" title="4. 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。"></a>4. 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</h5><h5 id="5-服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。"><a href="#5-服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。" class="headerlink" title="5. 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。"></a>5. 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</h5><h2 id="四-dubbo实现原理"><a href="#四-dubbo实现原理" class="headerlink" title="四 dubbo实现原理"></a>四 dubbo实现原理</h2><h3 id="1-执行流程"><a href="#1-执行流程" class="headerlink" title="1.执行流程"></a>1.执行流程</h3><p><img src="/2020/01/07/dubbo系列-一/zhixingliucheng.jpg" alt="执行流程"></p><h3 id="2-工作原理"><a href="#2-工作原理" class="headerlink" title="2.工作原理"></a>2.工作原理</h3><ol><li>client一个线程调用远程接口，生成一个唯一的ID（比如一段随机字符串，UUID等），Dubbo是使用AtomicLong从0开始累计数字的</li><li>将打包的方法调用信息（如调用的接口名称，方法名称，参数值列表等），和处理结果的回调对象callback，全部封装在一起，组成一个对象object</li><li>向专门存放调用信息的全局ConcurrentHashMap里面put(ID, object)</li><li>将ID和打包的方法调用信息封装成一对象connRequest，使用IoSession.write(connRequest)异步发送出去</li><li>当前线程再使用callback的get()方法试图获取远程返回的结果，在get()内部，则使用synchronized获取回调对象callback的锁， 再先检测是否已经获取到结果，如果没有，然后调用callback的wait()方法，释放callback上的锁，让当前线程处于等待状态。</li><li>服务端接收到请求并处理后，将结果（此结果中包含了前面的ID，即回传）发送给客户端，客户端socket连接上专门监听消息的线程收到消息，分析结果，取到ID，再从前面的ConcurrentHashMap里面get(ID)，从而找到callback，将方法调用结果设置到callback对象里。</li><li>监听线程接着使用synchronized获取回调对象callback的锁（因为前面调用过wait()，那个线程已释放callback的锁了），再notifyAll()，唤醒前面处于等待状态的线程继续执行（callback的get()方法继续执行就能拿到调用结果了），至此，整个过程结束</li></ol><h2 id="五-dubbo与springCloud区别"><a href="#五-dubbo与springCloud区别" class="headerlink" title="五 dubbo与springCloud区别"></a>五 dubbo与springCloud区别</h2><h4 id="1-Spring-Cloud与Dubbo功能对比"><a href="#1-Spring-Cloud与Dubbo功能对比" class="headerlink" title="1.Spring Cloud与Dubbo功能对比"></a>1.Spring Cloud与Dubbo功能对比</h4><table><thead><tr><th>功能名称</th><th>Dubbo</th><th>Spring Cloud</th></tr></thead><tbody><tr><td>服务注册中心</td><td>ZooKeeper</td><td>Spring Cloud Netflix Eureka</td></tr><tr><td>服务调用方式</td><td>RPC</td><td>REST API</td></tr><tr><td>服务网关</td><td>无</td><td>Spring Cloud Netflix Zuul</td></tr><tr><td>断路器</td><td>不完善</td><td>Spring Cloud Netflix Hystrix</td></tr><tr><td>分布式配置</td><td>无</td><td>Spring Cloud Config</td></tr><tr><td>服务跟踪</td><td>无</td><td>Spring Cloud Sleuth</td></tr><tr><td>消息总线</td><td>无</td><td>Spring Cloud Bus</td></tr><tr><td>数据流</td><td>无</td><td>Spring Cloud Stream</td></tr><tr><td>批量任务</td><td>无</td><td>Spring Cloud Task</td></tr></tbody></table><p>最大的区别:Spring Cloud抛弃了Dubbo 的RPC通信，采用的是基于HTTP的REST方式。<br>严格来说，这两种方式各有优劣。虽然在一定程度上来说，后者牺牲了服务调用的性能，但也避免了上面提到的原生RPC带来的问题。而且REST相比RPC更为灵活，服务提供方和调用方的依赖只依靠一纸契约，不存在代码级别的强依赖，这在强调快速演化的微服务环境下，显得更为合适。</p><h4 id="2-dubbo的缺点"><a href="#2-dubbo的缺点" class="headerlink" title="2.dubbo的缺点"></a>2.dubbo的缺点</h4><ul><li><p>Registry 严重依赖第三方组件（ZooKeeper 或者 Redis），当这些组件出现问题时，服务调用很快就会中断。</p></li><li><p>Dubbo 只支持 RPC 调用。这使得服务提供方与调用方在代码上产生了强依赖，服务提供方需要不断将包含公共代码的 Jar 包打包出来供消费方使用。一旦打包出现问题，就会导致服务调用出错</p></li></ul><h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h4><p>Dubbo和Spring Cloud并不是完全的竞争关系，两者所解决的问题域不一样：Dubbo的定位始终是一款RPC框架，而Spring Cloud的目的是微服务架构下的一站式解决方案。非要比较的话，Dubbo可以类比到Netflix OSS技术栈，而Spring Cloud集成了Netflix OSS作为分布式服务治理解决方案，但除此之外Spring Cloud还提供了包括config、stream、security、sleuth等分布式服务解决方案。<br>当前由于RPC协议、注册中心元数据不匹配等问题，在面临微服务基础框架选型时Dubbo与Spring Cloud只能二选一，这也是两者总拿来做对比的原因。Dubbo之后会积极寻求适配到Spring Cloud生态，比如作为SpringCloud的二进制通讯方案来发挥Dubbo的性能优势，或者Dubbo通过模块化以及对http的支持适配到Spring Cloud</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/zpoison/article/details/80729052" target="_blank" rel="noopener">https://blog.csdn.net/zpoison/article/details/80729052</a></p><p><a href="https://segmentfault.com/a/1190000019896723" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019896723</a></p><p><a href="http://dubbo.apache.org/zh-cn/docs" target="_blank" rel="noopener">http://dubbo.apache.org/zh-cn/docs</a></p><p><a href="http://c.biancheng.net/view/5310.html" target="_blank" rel="noopener">http://c.biancheng.net/view/5310.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一-dubbo是什么&quot;&gt;&lt;a href=&quot;#一-dubbo是什么&quot; class=&quot;headerlink&quot; title=&quot;一 dubbo是什么&quot;&gt;&lt;/a&gt;一 dubbo是什么&lt;/h2&gt;&lt;p&gt;在介绍dubbo之前先了解一些概念，soa和rpc&lt;/p&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
      <category term="dubbo" scheme="http://yuanww.cn/categories/dubbo/"/>
    
    
      <category term="java" scheme="http://yuanww.cn/tags/java/"/>
    
      <category term="dubbo" scheme="http://yuanww.cn/tags/dubbo/"/>
    
  </entry>
  
  <entry>
    <title>linux下安装和配置jdk</title>
    <link href="http://yuanww.cn/2019/12/27/linux%E4%B8%8B%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AEjdk/"/>
    <id>http://yuanww.cn/2019/12/27/linux下安装和配置jdk/</id>
    <published>2019-12-26T16:38:30.000Z</published>
    <updated>2019-12-26T13:49:17.307Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux下安装和配置jdk"><a href="#linux下安装和配置jdk" class="headerlink" title="linux下安装和配置jdk"></a><strong>linux下安装和配置jdk</strong></h1><h3 id="1-下载jdk"><a href="#1-下载jdk" class="headerlink" title="1.下载jdk"></a>1.下载jdk</h3><p>​    Jdk下载地址：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">点击下载</a><br><img src="/2019/12/27/linux下安装和配置jdk/1577365354266.png" alt="1577365354266"></p><p>下载linux x64 64位的 tar.gz文件</p><blockquote><p>现在oracle下载文件需要登录账号 直接在百度搜索oracle账号 就可以下载了</p></blockquote><h3 id="2-解压jdk"><a href="#2-解压jdk" class="headerlink" title="2.解压jdk"></a>2.解压jdk</h3><p>利用ftp软件把下载好的压缩包上传到服务器opt目录下</p><blockquote><p>网上有很多ftp连接工具 我这里使的是FileZilla </p></blockquote><p><img src="/2019/12/27/linux下安装和配置jdk/1577365540558.png" alt="1577365540558"></p><p>进入opt目录 输入解压命令 然后回车即可 解压命令：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf jdk-<span class="number">8</span>u231-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></p><p><img src="/2019/12/27/linux下安装和配置jdk/1577365645647.png" alt="1577365645647"></p><p>解压之后 用<code>ls</code>命令查看opt文件夹 如果有jdk文件夹 说明解压成功</p><p><img src="/2019/12/27/linux下安装和配置jdk/1577365907059.png" alt="1577365907059"></p><h3 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3.配置环境变量"></a>3.配置环境变量</h3><p>（1）编辑/etc/profile文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></p><p>（2）按<code>Insert</code>或者<code>I</code>键，切换成编辑模式。大写G跳到最后，按图片输入下面一段话。</p><p><img src="/2019/12/27/linux下安装和配置jdk/1577367078041.png" alt="1577367078041"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/jdk1.8.0_231</span><br><span class="line">export CLASSPATH=.:JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>（3）按<code>Esc</code>退出编辑模式，输入<code>:wq</code>保存并退出</p><p><img src="/2019/12/27/linux下安装和配置jdk/1577367095852.png" alt="1577367095852"></p><p>（4）生效环境变量</p><p>​        对于/etc/profile编写完成之后是不够的，还需要最后一个步骤，就是让刚刚我们修改的文件变成有效起来，所以我们再输入一个命令，让修改生效。<br>生效命令：<code>source /etc/profile</code></p><p><img src="/2019/12/27/linux下安装和配置jdk/1577366806622.png" alt="1577366806622"></p><p>（5）验证是否配置成功</p><p>输入命令<code>java -version</code> 如下图所示 说明配置成功</p><p><img src="/2019/12/27/linux下安装和配置jdk/1577367132356.png" alt="1577367132356"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;linux下安装和配置jdk&quot;&gt;&lt;a href=&quot;#linux下安装和配置jdk&quot; class=&quot;headerlink&quot; title=&quot;linux下安装和配置jdk&quot;&gt;&lt;/a&gt;&lt;strong&gt;linux下安装和配置jdk&lt;/strong&gt;&lt;/h1&gt;&lt;h3 id=&quot;
      
    
    </summary>
    
      <category term="linux" scheme="http://yuanww.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yuanww.cn/tags/linux/"/>
    
      <category term="java" scheme="http://yuanww.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>VMware虚拟机安装Centos7</title>
    <link href="http://yuanww.cn/2019/12/23/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Centos7/"/>
    <id>http://yuanww.cn/2019/12/23/VMware虚拟机安装Centos7/</id>
    <published>2019-12-23T14:30:56.000Z</published>
    <updated>2019-12-23T14:52:08.321Z</updated>
    
    <content type="html"><![CDATA[<p>#VMware虚拟机安装Centos7</p><h2 id="一-虚拟机的介绍"><a href="#一-虚拟机的介绍" class="headerlink" title="一.虚拟机的介绍"></a>一.虚拟机的介绍</h2><p>​          VMWare (Virtual Machine ware)是一个虚拟机软件，它可以使你在一台机器上同时运行二个或更多Windows、DOS、LINUX系统。“多启动”系统（Win10+Win7双系统）开机时只能选择其中一个运行，切换系统则需要重新启动机器。与之相比，VMWare在某种意义上可算是多系统“同时”运行。通过下载安装VMware Workstation，相当于在Windows系统里再安装了一个Windows系统，而且它还可以像应用程序那样进行切换。每个虚拟机操作系统你都可以进行虚拟的分区、配置而不影响真实硬盘的数据，甚至可以通过网卡将几台虚拟机用网卡连接为一个局域网，极其方便。</p><h2 id="二-Cetnos7镜像的下载"><a href="#二-Cetnos7镜像的下载" class="headerlink" title="二.Cetnos7镜像的下载"></a>二.Cetnos7镜像的下载</h2><p>阿里云站点：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/" target="_blank" rel="noopener">http://mirrors.aliyun.com/centos/7/isos/x86_64/</a></p><p>每个链接都包括了镜像文件的地址、类型及版本号等信息</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577106901145.png" alt="1577106901145"></p><p>进入阿里云站点，选择 <strong>CentOS-7-x86_64-DVD-1908.iso下载</strong></p><table><thead><tr><th style="text-align:left">各个版本的ISO镜像文件说明：</th><th></th></tr></thead><tbody><tr><td style="text-align:left">CentOS-7-x86_64-DVD-1908.iso</td><td>标准安装版（推荐）</td></tr><tr><td style="text-align:left">CentOS-7-x86_64-Everything-1908.iso</td><td>完整版，集成所有软件</td></tr><tr><td style="text-align:left">CentOS-7-x86_64-LiveGNOME-1908.iso</td><td>GNOME桌面版</td></tr><tr><td style="text-align:left">CentOS-7-x86_64-LiveKDE-1908.iso</td><td>KDE桌面版</td></tr><tr><td style="text-align:left">CentOS-7-x86_64-Minimal-1908.iso</td><td>精简版，自带的软件最少</td></tr><tr><td style="text-align:left">CentOS-7-x86_64-NetInstall-1908.iso</td><td>网络安装版（从网络安装）</td></tr></tbody></table><h2 id="三-VMware的安装"><a href="#三-VMware的安装" class="headerlink" title="三.VMware的安装"></a>三.VMware的安装</h2><p>VMware 有两个版本，分别是 VMware Workstation Pro 和 VMware Workstation Player。</p><ul><li>Player 是免费版本，只能用于非商业用途，适合个人学习。</li><li>Pro 是商业版本，功能最强大，付费以后才能使用。</li></ul><p>VMware Workstation Pro 下载地址链接<a href="https://pan.baidu.com/s/1_ElsqnaL4QppQvnJJbyMUw" target="_blank" rel="noopener">https://pan.baidu.com/s/1_ElsqnaL4QppQvnJJbyMUw</a> 提取码：r5li （下载得到的压缩包中含有 VMware 安装所需的秘钥，亲测有效，可放心使用）</p><blockquote><p>VMware 对计算机的硬件配置要求比较高，配置低了虚拟机会很慢，甚至不能运行。理论上，配置越高越好，现在主流的计算机配置都可以达到运行 VMware 的要求。</p></blockquote><p>​        由于 VMware 的安装过程比较简单，与安装普通软件无异，因此不再过多阐述。这里假设读者已经下载并已安装好 VMware，接下来直接开始使用 VMware 安装 Linux 系统。</p><h2 id="四-虚拟机的安装"><a href="#四-虚拟机的安装" class="headerlink" title="四.虚拟机的安装"></a>四.虚拟机的安装</h2><p>启动 VMware，进入其主界面，如图 一 所示。</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577106432956.png" alt="1577106432956"></p><p>​                                                          图一 -VMware主界面</p><p>点击“创建新的虚拟机”，进入虚拟机设置向导界面，如图 2二所示，这里建议初学者选择“典型（推荐）”。</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577109011932.png" alt="1577109011932"></p><p>​                                                    图二-虚拟机设置向导界面</p><p>点击“下一步”，进入“安装操作系统”界面，将已经下载好的 Linux 系统的映像文件（.iso 文件），如图 三所示。</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577106618728.png" alt="1577106618728"></p><p>​                                                    图三-安装客户机操作系统</p><p>继续“下一步”，进入“命名虚拟机”界面，给虚拟机起一个名字（如“CentOS 7”），然后单击“浏览”按钮，选择虚拟机系统安装文件的保存位置，如图 四 所示。</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107096011.png" alt="1577107096011"></p><p>​                                                    图四-选择安装位置</p><p>单击”下一步”按钮，进入”指定磁盘容量”界面。默认虚拟硬盘大小为 20GB（虚拟硬盘会以文件形式存放在虚拟机系统安装目录中）。虚拟硬盘的空间可以根据需要调整大小，但不用担心其占用的空间，因为实际占用的空间还是以安装的系统大小而非此处划分的硬盘大小为依据的。</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107114730.png" alt="1577107114730"></p><p>​                                                    图五-创建虚拟机向导</p><p>单机“下一步”按钮，这里，我们可以略做调整，单击”自定义硬件”按钮进入硬件调整界面。为了让虚拟机中的系统运行速度快一点，我们可以选择”内存”调整虚拟机内存大小，但是建议虚拟机内存不要超过宿主机内存的一半。如图六。</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107217973.png" alt="1577107217973"></p><p>​                                                    图六-自定义硬件</p><p>硬盘配置设置完成后，点击图 七 中的“完成”按钮，就成功创建了一台虚拟机！VMware 会直接启动 Linux CentOS 系统，经过以上几步，我们就成功地用 VMware 虚拟机安装好了 Linux 系统。</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107272058.png" alt="1577107272058"></p><h2 id="五-Centos的安装和配置"><a href="#五-Centos的安装和配置" class="headerlink" title="五.Centos的安装和配置"></a>五.Centos的安装和配置</h2><p>安装完成后启动虚拟机进入到该界面，选择第一个install Centos7 开始安装</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107325196.png" alt="1577107325196"></p><p>接下来会进入到这个界面，耐心等待就好（大概两三分钟~~~）</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107343960.png" alt="1577107343960"></p><p>之后进入到选择语言界面，往下拉选择中文，然后下一步</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107490386.png" alt="1577107490386"></p><p>点击安装位置，选择磁盘，点击完成</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107525261.png" alt="1577107525261"></p><p>下一步，点击开始安装</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107601790.png" alt="1577107601790"></p><p>设置root密码，创建用户可以暂时忽略（有需要可以创建用户）</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107623409.png" alt="1577107623409"></p><p>设置root密码，记住root密码，常用于远程连接虚拟机</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107802739.png" alt="1577107802739"></p><p>安装完成，点击重启</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107902560.png" alt="1577107902560"></p><p>进入系统界面，选择第一个，进入系统</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577109551431.png" alt="1577109551431"></p><p>输入设置好的root用户名和密码，登录成功，开始愉快的使用linux系统吧！</p><p><img src="/2019/12/23/VMware虚拟机安装Centos7/1577107918552.png" alt="1577107918552"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#VMware虚拟机安装Centos7&lt;/p&gt;
&lt;h2 id=&quot;一-虚拟机的介绍&quot;&gt;&lt;a href=&quot;#一-虚拟机的介绍&quot; class=&quot;headerlink&quot; title=&quot;一.虚拟机的介绍&quot;&gt;&lt;/a&gt;一.虚拟机的介绍&lt;/h2&gt;&lt;p&gt;​          VMWare (
      
    
    </summary>
    
      <category term="linux" scheme="http://yuanww.cn/categories/linux/"/>
    
    
      <category term="虚拟机" scheme="http://yuanww.cn/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="linux" scheme="http://yuanww.cn/tags/linux/"/>
    
  </entry>
  
</feed>
